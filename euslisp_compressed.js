// Do not edit this file; automatically generated by gulp.

/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(['./blockly_compressed.js'], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require('./blockly_compressed.js'));
  } else { // Browser
    root.Blockly.EusLisp = factory(root.Blockly);
  }
}(this, function(Blockly) {
  'use strict';function brack_it(){var a=[].slice.call(arguments);a=a.filter(b=>""!==b);return"("+a.join(" ")+")"}Blockly.EusLisp=new Blockly.Generator("EusLisp");Blockly.EusLisp.addReservedWords("*,**,***,+,++,+++,-,*asynchronous-stream-functions*,*asynchronous-streams*,*break-on-warning*,*debug*,*default-pathname-defaults*,*default-readtable*,*error-handler*,*error-output*,*eusdir*,*eustop-hook*,*evalhook*,*exit-on-fatal-error*,*features*,*history*,*history-index*,*history-max*,*history-sequence*,*input-line*,*keyword-package*,*line-edit-dispatch*,*lisp-package*,*load-path*,*load-verbose*,*loaded-modules*,*loader-current-directory*,*machine*,*modules*,*os-version*,*package*,*print-base*,*print-case*,*print-circle*,*print-length*,*print-level*,*print-object*,*print-structure*,*program-name*,*prompt*,*prompt-string*,*random-state*,*read-base*,*readtable*,*remote-port*,*replevel*,*reptype*,*select-stream-vector*,*server-streams*,*signal-handlers*,*standard-input*,*standard-output*,*symbol-input*,*system-package*,*terminal-io*,*timed-functions*,*timer-job*,*top-selector*,*top-selector-interval*,*toplevel*,*toplevel-hook*,*traced-functions*,*tracelevel*,*try-unix*,*unix-package*,*user*,*user-package*,*world-coords*,*world-coords2*,pi,pi/2,-2pi,-pi,-pi/2,2pi,af_inet,af_unix,array,array-dimension-limit,array-rank-limit,bignum,bit-vector,broadcast-stream,carray,closure,compiled-code,complex,cons,cstruct,cstructclass,euserror,extended-number,file-stream,float-vector,foreign-code,foreign-pod,foreign-string,hash-table,integer-vector,internal-time-units-per-second,io-stream,label-reference,lisp-implementation-version,load-module,least-negative-float,least-positive-float,most-negative-fixnum,most-negative-float,most-positive-fixnum,most-positive-float,long-float-epsilon,short-float-epsilon,single-float-epsilon,metaclass,nil,object,package,pathname,port-selector,propertied-object,queue,ratio,readtable,socket-address,socket-port,socket-stream,sock_dgram,sock_stream,stream,string,symbol,t,thread,url-pathname,vector,vectorclass,");
Blockly.EusLisp.ORDER_ATOMIC=0;Blockly.EusLisp.ORDER_VARIABLE=1;Blockly.EusLisp.ORDER_SETF=2;Blockly.EusLisp.ORDER_FUNCTION_CALL=3;Blockly.EusLisp.ORDER_NONE=99;Blockly.EusLisp.isInitialized=!1;
Blockly.EusLisp.init=function(a){Blockly.EusLisp.definitions_=Object.create(null);Blockly.EusLisp.functionNames_=Object.create(null);Blockly.EusLisp.variableDB_?Blockly.EusLisp.variableDB_.reset():Blockly.EusLisp.variableDB_=new Blockly.Names(Blockly.EusLisp.RESERVED_WORDS_);Blockly.EusLisp.variableDB_.safeName_=function(d){d?(d=d.replace(/[ ,:%]/g,"-"),isNaN(parseFloat(d))||(d="my_"+d)):d=Blockly.Msg.UNNAMED_KEY||"unnamed";return d};Blockly.EusLisp.variableDB_.setVariableMap(a.getVariableMap());
for(var b=[],c=Blockly.Variables.allDeveloperVariables(a),e=0;e<c.length;e++)b.push(Blockly.EusLisp.variableDB_.getName(c[e],Blockly.Names.DEVELOPER_VARIABLE_TYPE));a=Blockly.Variables.allUsedVarModels(a);for(e=0;e<a.length;e++)c=Blockly.EusLisp.variableDB_.getName(a[e].getId(),Blockly.VARIABLE_CATEGORY_NAME),b.push(brack_it("defvar",c));Blockly.EusLisp.definitions_.variables=b.join("\n");this.isInitialized=!0};
Blockly.EusLisp.finish=function(a){var b=[],c=[],e;for(e in Blockly.EusLisp.definitions_){var d=Blockly.EusLisp.definitions_[e];d.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(d):c.push(d)}delete Blockly.EusLisp.definitions_;delete Blockly.EusLisp.functionNames_;Blockly.EusLisp.variableDB_.reset();return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};
Blockly.EusLisp.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n");-1!==a.indexOf('"')&&(a=a.replace(/"/g,'\\"'));return'"'+a+'"'};Blockly.EusLisp.multiline_quote_=function(a){a=a.split(/\n/g).map(Blockly.EusLisp.quote_);return 1==a.length?a[0]:brack_it("concatenate","string",a.join(" '(#\\Newline) "))+"\n"};
Blockly.EusLisp.scrub_=function(a,b,c){var e="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(d=Blockly.utils.string.wrap(d,Blockly.EusLisp.COMMENT_WRAP-3),e+=Blockly.EusLisp.prefixLines(d+"\n",";; "));for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.inputTypes.VALUE&&(d=a.inputList[f].connection.targetBlock())&&(d=Blockly.EusLisp.allNestedComments(d))&&(e+=Blockly.EusLisp.prefixLines(d,"; "))}a=a.nextConnection&&a.nextConnection.targetBlock();
c=c?"":Blockly.EusLisp.blockToCode(a);return e+b+(c?"\n":"")+c};Blockly.EusLisp.getAdjustedInt=function(a,b,c,e){c=c||0;a.workspace.options.oneBasedIndex&&c--;var d=a.workspace.options.oneBasedIndex?"1":"0";a=Blockly.EusLisp.valueToCode(a,b,Blockly.EusLisp.ORDER_NONE)||d;Blockly.isNumber(a)?(a=parseInt(a,10)+c,a=e?Math.max(a,1):Math.max(a,0)):(a=0<c?"int("+a+" + "+c+")":0>c?"int("+a+" - "+-c+")":"int("+a+")",e&&(a="-"+a));return a};
Blockly.EusLisp.nextBlock=function(a,b){return(a=a.getInputTargetBlock(b))&&a.nextConnection&&a.nextConnection.targetBlock()};Blockly.EusLisp.statementToCode=function(a,b){a=a.getInputTargetBlock(b);b=this.blockToCode(a);if("string"!=typeof b)throw TypeError("Expecting code from statement block: "+(a&&a.type));b&&b.includes("\n")&&(b=this.prefixLines("\n"+b,this.INDENT));return b};Blockly.EusLisp.valueToCodeOrder=function(a,b){return(a=a.getInputTargetBlock(b))?this.blockToCode(a):""};Blockly.EusLisp.colour={};Blockly.EusLisp.colour_picker=function(a){return[Blockly.EusLisp.quote_(a.getFieldValue("COLOUR")),Blockly.EusLisp.ORDER_ATOMIC]};Blockly.EusLisp.colour_random=function(a){return['(format nil "#~0,6X" (random (1- (expt 2 24))))',Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.colour_rgb=function(a){var b=Blockly.EusLisp.provideFunction_("colour-rgb",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+"(r g b)","  (flet ((x255 (x) (round (* 2.55 (min 100 (max 0 x))))))",'    (format nil "#~0,2X~0,2X~0,2X" (x255 r) (x255 g) (x255 b))))']),c=Blockly.EusLisp.valueToCode(a,"RED",Blockly.EusLisp.ORDER_NONE)||0,e=Blockly.EusLisp.valueToCode(a,"GREEN",Blockly.EusLisp.ORDER_NONE)||0;a=Blockly.EusLisp.valueToCode(a,"BLUE",Blockly.EusLisp.ORDER_NONE)||0;return[brack_it(b,
c,e,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.colour_blend=function(a){var b=Blockly.EusLisp.provideFunction_("colour-blend",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  (let ((*read-base* 16)","        (ratio (max (min ratio 1) 0)))","    (flet ((blend-component (start end)","             (round","              (+ (* (read-from-string (subseq colour1 start end)) (- 1 ratio))","                 (* (read-from-string (subseq colour2 start end)) ratio)))))",'      (format nil "#~0,2X~0,2X~0,2X"',
"              (blend-component 1 3) (blend-component 3 5) (blend-component 5 7)))))"]),c=Blockly.EusLisp.valueToCode(a,"COLOUR1",Blockly.EusLisp.ORDER_NONE)||'"#000000"',e=Blockly.EusLisp.valueToCode(a,"COLOUR2",Blockly.EusLisp.ORDER_NONE)||'"#000000"';a=Blockly.EusLisp.valueToCode(a,"RATIO",Blockly.EusLisp.ORDER_NONE)||0;return[brack_it(b,c,e,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.lists={};Blockly.EusLisp.lists_create_empty=function(a){return["()",Blockly.EusLisp.ORDER_ATOMIC]};Blockly.EusLisp.lists_create_with=function(a){if(0==a.itemCount_)return["()",Blockly.EusLisp.ORDER_ATOMIC];for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.EusLisp.valueToCode(a,"ADD"+c,Blockly.EusLisp.ORDER_NONE)||"nil";return[brack_it("list",...b),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_repeat=function(a){var b=Blockly.EusLisp.valueToCode(a,"ITEM",Blockly.EusLisp.ORDER_NONE)||"nil";a=Blockly.EusLisp.valueToCode(a,"NUM",Blockly.EusLisp.ORDER_NONE)||"0";return[brack_it("make-list",a,":initial-element",b),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.lists_length=function(a){a=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"()";return[brack_it("length",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_isEmpty=function(a){a=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"()";return[brack_it("null",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_indexOf=function(a){var b=Blockly.EusLisp.valueToCode(a,"FIND",Blockly.EusLisp.ORDER_NONE)||"nil",c=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"nil";if(a.workspace.options.oneBasedIndex)var e="0",d=g=>`(1+ ${g})`,f=(g,h)=>`(- (length ${h}) ${g})`;else e="-1",d=g=>g,f=(g,h)=>`(- (length ${h}) ${g} 1)`;if("FIRST"==a.getFieldValue("END"))return a=Blockly.EusLisp.provideFunction_("first-position",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (item my-list)",
" (let ((index (position item my-list :test #'equal)))",`   (if index ${d("index")} ${e}))))`]),b=brack_it(a,b,c),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];a=Blockly.EusLisp.provideFunction_("last-position",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (item my-list)"," (let ((index (position item (reverse my-list) :test #'equal)))",`     (if index ${f("index","my-list")} ${e}))`]);b=brack_it(a,b,c);return[b,Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",e=Blockly.EusLisp.valueToCodeOrder(a,"VALUE")||["()",Blockly.EusLisp.ORDER_ATOMIC],d=e[0],f=e[1];e=function(){return Blockly.EusLisp.provideFunction_("pop-n",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-list n &key from-end)","  (let ((n (if from-end (- (length my-list) n) n)))","    (prog1 (nth n my-list)","      (if (zerop n)","          (pop my-list)","          (list-delete my-list n)))))"])};
switch(c){case "FIRST":if("GET"==b)return d=brack_it("car",d),[d,Blockly.EusLisp.ORDER_SETF];if("GET_REMOVE"==b)return d=brack_it("pop",d),[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d=brack_it("pop",d);break;case "LAST":if("GET"==b)return d=brack_it("car",brack_it("last",d)),[d,Blockly.EusLisp.ORDER_SETF];if("GET_REMOVE"==b)return c=e(),d=brack_it(c,d,"0",":from-end t"),[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];if("REMOVE"==b)switch(f){case Blockly.EusLisp.ORDER_VARIABLE:return d=
brack_it("setq",d,brack_it("butlast",d));case Blockly.EusLisp.ORDER_SETF:return d=brack_it("setf",d,brack_it("butlast",d));default:return d=brack_it("butlast",d)}break;case "FROM_START":a=Blockly.EusLisp.getAdjustedInt(a,"AT");if("GET"==b)return d=brack_it("nth",a,d),[d,Blockly.EusLisp.ORDER_SETF];if("GET_REMOVE"==b)return c=e(),d=brack_it(c,d,a),[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];if("REMOVE"==b)return c=e(),d=brack_it(c,d,a);break;case "FROM_END":a=Blockly.EusLisp.getAdjustedInt(a,"AT");if("GET"==
b)return d=brack_it("nth",a,brack_it("reverse",d)),[d,Blockly.EusLisp.ORDER_SETF];c=e();d=brack_it(c,d,a,":from-end t");if("GET_REMOVE"==b)return[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d;break;case "RANDOM":if("GET"==b)return c=Blockly.EusLisp.provideRandomChoice(),d=brack_it(c,d),[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];e();c=Blockly.EusLisp.provideFunction_("pop-random",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-list)","  (let ((n (random (length my-list))))",
"    (pop-n my-list n)))"]);d=brack_it(c,d);if("GET_REMOVE"==b)return[d,Blockly.EusLisp.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d}throw Error("Unhandled combination (lists_getIndex).");};
Blockly.EusLisp.lists_setIndex=function(a){var b=Blockly.EusLisp.valueToCode(a,"LIST",Blockly.EusLisp.ORDER_NONE)||"()",c=a.getFieldValue("MODE")||"GET",e=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.EusLisp.valueToCode(a,"TO",Blockly.EusLisp.ORDER_NONE)||"nil",f=function(){return Blockly.EusLisp.provideFunction_("push-n",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (item my-list n &key from-end)","  (let ((n (if from-end (- (length my-list) n) n)))","    (if (zerop n)","        (push item my-list)",
"        (list-insert item n my-list))))"])};switch(e){case "FIRST":if("SET"==c)return b=brack_it("setf",brack_it("car",b),d);if("INSERT"==c)return b=brack_it("push",d,b);break;case "LAST":if("SET"==c)return b=brack_it("setf",brack_it("car",brack_it("last",b)),d);if("INSERT"==c)return c=f(),b=brack_it(c,d,b,"0",":from-end t");break;case "FROM_START":a=Blockly.EusLisp.getAdjustedInt(a,"AT");if("SET"==c)return b=brack_it("setf",brack_it("nth",a,b),d);if("INSERT"==c)return c=f(),b=brack_it(c,d,b,a);
break;case "FROM_END":if("SET"==c)return a=Blockly.EusLisp.getAdjustedInt(a,"AT",0,!0),a=brack_it("-",brack_it("length",b),a),b=brack_it("setf",brack_it("nth",a,b),d);if("INSERT"==c)return a=Blockly.EusLisp.getAdjustedInt(a,"AT"),c=f(),b=brack_it(c,d,b,a,":from-end t");break;case "RANDOM":if("SET"==c)return`(setf (nth (random (length ${b})) ${b}) ${d})`;if("INSERT"==c)return f(),c=Blockly.EusLisp.provideFunction_("push-random",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (item my-list)",
"  (let ((n (random (length my-list))))","    (push-n item my-list n)))"]),b=brack_it(c,d,b)}throw Error("Unhandled combination (lists_setIndex).");};
Blockly.EusLisp.lists_getSublist=function(a){var b=Blockly.EusLisp.valueToCode(a,"LIST",Blockly.EusLisp.ORDER_NONE)||"()",c=a.getFieldValue("WHERE1"),e=a.getFieldValue("WHERE2");switch(c){case "FROM_START":c=Blockly.EusLisp.getAdjustedInt(a,"AT1");break;case "FROM_END":c=Blockly.EusLisp.getAdjustedInt(a,"AT1",1,!0);c=brack_it("-",brack_it("length",b),c);break;case "FIRST":c="0";break;default:throw Error("Unhandled option (lists_getSublist)");}switch(e){case "FROM_START":a=Blockly.EusLisp.getAdjustedInt(a,
"AT2",1);break;case "FROM_END":a=Blockly.EusLisp.getAdjustedInt(a,"AT2",0);a=0==a?"":brack_it("-",brack_it("length",b),a);break;case "LAST":a="";break;default:throw Error("Unhandled option (lists_getSublist)");}return[brack_it("subseq",b,c,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_sort=function(a){var b=Blockly.EusLisp.valueToCodeOrder(a,"LIST")||["()",Blockly.EusLisp.ORDER_ATOMIC],c=b[0];b=b[1];var e=a.getFieldValue("TYPE");a="1"===a.getFieldValue("DIRECTION")?!0:!1;b==Blockly.EusLisp.ORDER_VARIABLE&&(c=brack_it("copy-list",c));switch(e){case "NUMERIC":return[`(sort ${c} #'${a?"<=":">="} `+"#'(lambda (x) (if (numberp x) x 0)))",Blockly.EusLisp.ORDER_FUNCTION_CALL];case "TEXT":return[`(sort ${c} #'string${a?"<=":">="} `+"#'string)",Blockly.EusLisp.ORDER_FUNCTION_CALL];
case "IGNORE_CASE":return[`(sort ${c} #'string${a?"<=":">="} `+"#'(lambda (x) (string-downcase (string x))))",Blockly.EusLisp.ORDER_FUNCTION_CALL];default:throw Error("Unhandled option (lists_sort)");}};
Blockly.EusLisp.lists_split=function(a){var b=Blockly.EusLisp.valueToCode(a,"INPUT",Blockly.EusLisp.ORDER_NONE),c=Blockly.EusLisp.valueToCode(a,"DELIM",Blockly.EusLisp.ORDER_NONE)||'""';a=a.getFieldValue("MODE");if("SPLIT"==a)b=b||'""',Blockly.EusLisp.provideSearchAll(),a=Blockly.EusLisp.provideSplit(),b=brack_it(a,b,c);else if("JOIN"==a)b=b||"()",a=Blockly.EusLisp.provideJoin(),b=brack_it(a,b,c);else throw Error("Unknown mode: "+a);return[b,Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.lists_reverse=function(a){a=Blockly.EusLisp.valueToCode(a,"LIST",Blockly.EusLisp.ORDER_NONE)||"()";return[brack_it("reverse",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.logic={};
Blockly.EusLisp.controls_if=function(a){var b=0,c="";Blockly.EusLisp.STATEMENT_PREFIX&&(c+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_PREFIX,a));do++b;while(a.getInput("IF"+b));if(1==b){var e=Blockly.EusLisp.valueToCode(a,"IF0",Blockly.EusLisp.ORDER_NONE)||"nil";var d=Blockly.EusLisp.statementToCode(a,"DO0");b=Blockly.EusLisp.statementToCode(a,"ELSE");c=Blockly.EusLisp.nextBlock(a,"DO0");a=Blockly.EusLisp.nextBlock(a,"ELSE");if(c&&!b)return c=brack_it("when",e,d);if(!d&&b)return c=brack_it("unless",
e,b);if(c||a)c&&(d=brack_it("progn",d)),a&&(b=brack_it("progn",b)),d=Blockly.EusLisp.prefixLines("\n"+d,Blockly.EusLisp.INDENT),b=Blockly.EusLisp.prefixLines("\n"+b,Blockly.EusLisp.INDENT);return c=brack_it("if",e,d,b)}b=0;c+="(cond\n";do e=Blockly.EusLisp.valueToCode(a,"IF"+b,Blockly.EusLisp.ORDER_NONE)||"nil",d=Blockly.EusLisp.statementToCode(a,"DO"+b),Blockly.EusLisp.STATEMENT_SUFFIX&&(d=Blockly.EusLisp.prefixLines(Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_SUFFIX,a),Blockly.EusLisp.INDENT)+
d),0!=b&&(c+="\n"),c+=Blockly.EusLisp.prefixLines(brack_it(e,d),Blockly.EusLisp.INDENT),++b;while(a.getInput("IF"+b));if(a.getInput("ELSE")||Blockly.EusLisp.STATEMENT_SUFFIX)d=Blockly.EusLisp.statementToCode(a,"ELSE"),Blockly.EusLisp.STATEMENT_SUFFIX&&(d=Blockly.EusLisp.prefixLines(Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_SUFFIX,a),Blockly.EusLisp.INDENT)+d),c=c+"\n"+(Blockly.EusLisp.INDENT+brack_it("t",d));return c+")"};Blockly.EusLisp.controls_ifelse=Blockly.EusLisp.controls_if;
Blockly.EusLisp.logic_compare=function(a){var b={EQ:"equal",NEQ:"equal",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=Blockly.EusLisp.valueToCode(a,"A",Blockly.EusLisp.ORDER_NONE)||"0",e=Blockly.EusLisp.valueToCode(a,"B",Blockly.EusLisp.ORDER_NONE)||"0";b=brack_it(b,c,e);"NEQ"==a.getFieldValue("OP")&&(b=brack_it("not",b));return[b,Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",c=Blockly.EusLisp.valueToCode(a,"A",Blockly.EusLisp.ORDER_NONE);a=Blockly.EusLisp.valueToCode(a,"B",Blockly.EusLisp.ORDER_NONE);if(c||a){var e="and"==b?"t":"nil";c||(c=e);a||(a=e)}else a=c="nil";return[brack_it(b,c,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.logic_negate=function(a){a=Blockly.EusLisp.valueToCode(a,"BOOL",Blockly.EusLisp.ORDER_NONE)||"t";return[brack_it("not",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"t":"nil",Blockly.EusLisp.ORDER_ATOMIC]};Blockly.EusLisp.logic_null=function(a){return["nil",Blockly.EusLisp.ORDER_ATOMIC]};Blockly.EusLisp.logic_ternary=function(a){var b=Blockly.EusLisp.valueToCode(a,"IF",Blockly.EusLisp.ORDER_NONE)||"nil",c=Blockly.EusLisp.valueToCode(a,"THEN",Blockly.EusLisp.ORDER_NONE)||"nil";a=Blockly.EusLisp.valueToCode(a,"ELSE",Blockly.EusLisp.ORDER_NONE)||"nil";return[brack_it("if",b,c,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.loops={};Blockly.EusLisp.hasContinue_=function(a){if(!a)return!1;if(a&&"controls_flow_statements"===a.type&&"CONTINUE"===a.getFieldValue("FLOW"))return!0;if(!["controls_repeat","controls_repeat_ext","controls_whileUntil","controls_for","controls_forEach"].includes(a.type))for(var b=0,c;c=a.inputList[b];b++)if(c=a.getInputTargetBlock(c.name),Blockly.EusLisp.hasContinue_(c))return!0;a=a.nextConnection&&a.nextConnection.targetBlock();return Blockly.EusLisp.hasContinue_(a)?!0:!1};
Blockly.EusLisp.addContinueLabel_=function(a,b,c){c&&(b=b.getInputTargetBlock(c));return Blockly.EusLisp.hasContinue_(b)?(a="\n"+brack_it("tagbody",a,"\n :continue"),a=Blockly.EusLisp.prefixLines(a,Blockly.EusLisp.INDENT)):a};
Blockly.EusLisp.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(Number(a.getFieldValue("TIMES"),10)):Blockly.EusLisp.valueToCode(a,"TIMES",Blockly.EusLisp.ORDER_NONE)||"0",c=Blockly.EusLisp.statementToCode(a,"DO");c=Blockly.EusLisp.addLoopTrap(c,a);c=Blockly.EusLisp.addContinueLabel_(c,a,"DO");a=Blockly.EusLisp.variableDB_.getDistinctName("count",Blockly.VARIABLE_CATEGORY_NAME);return brack_it("dotimes",brack_it(a,b),c)};Blockly.EusLisp.controls_repeat=Blockly.EusLisp.controls_repeat_ext;
Blockly.EusLisp.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.EusLisp.valueToCode(a,"BOOL",Blockly.EusLisp.ORDER_NONE)||"nil",e=Blockly.EusLisp.statementToCode(a,"DO");e=Blockly.EusLisp.addLoopTrap(e,a);e=Blockly.EusLisp.addContinueLabel_(e,a,"DO");b&&(c=brack_it("not",c));return brack_it("while",c,e)};
Blockly.EusLisp.controls_for=function(a){var b=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.EusLisp.valueToCode(a,"FROM",Blockly.EusLisp.ORDER_NONE)||"0",e=Blockly.EusLisp.valueToCode(a,"TO",Blockly.EusLisp.ORDER_NONE)||"0",d=Blockly.EusLisp.valueToCode(a,"BY",Blockly.EusLisp.ORDER_NONE)||"1",f=Blockly.EusLisp.statementToCode(a,"DO");f=Blockly.EusLisp.addLoopTrap(f,a);f=Blockly.EusLisp.addContinueLabel_(f,a,"DO");!f||/^\s/.test(f)||Blockly.EusLisp.nextBlock(a,
"DO")||(f="\n"+Blockly.EusLisp.INDENT+f);if(Blockly.isNumber(c)&&Blockly.isNumber(e)&&Blockly.isNumber(d)){a=Math.abs(Number(d));var g=Number(c)<=Number(e);return 0==c&&1==a&&g?`(dotimes (${b} ${e})`+`${f})`:`(do ((${b} ${c} (${g?"+":"-"} ${b} ${a})))`+"\n"+`    ((${g?">":"<"} ${b} ${e}))`+`${f})`}if(Blockly.isNumber(c)&&Blockly.isNumber(e)){g=Number(c)<=Number(e);var h=Blockly.EusLisp.variableDB_.getDistinctName(b+"_inc",Blockly.VARIABLE_CATEGORY_NAME);return`(do* ((${h} (abs ${d}))`+"\n      "+
`(${b} ${c} (${g?"+":"-"} ${b} ${h})))`+"\n     "+`((${g?">":"<"} ${b} ${e}))`+`${f})`}c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.EusLisp.variableDB_.getDistinctName(b+"_start",Blockly.VARIABLE_CATEGORY_NAME));var k;e.match(/^\w+$/)||Blockly.isNumber(e)||(k=Blockly.EusLisp.variableDB_.getDistinctName(b+"_end",Blockly.VARIABLE_CATEGORY_NAME));h=Blockly.EusLisp.variableDB_.getDistinctName(b+"_inc",Blockly.VARIABLE_CATEGORY_NAME);Blockly.isNumber(d)?(a=Math.abs(d)+"",d="-"+a):(a=brack_it("abs",
d),d=brack_it("-",d));var l=Blockly.EusLisp.variableDB_.getDistinctName(b+"_op",Blockly.VARIABLE_CATEGORY_NAME);return b=`(do* (${g?brack_it(g,c)+"\n      ":""}`+`${k?brack_it(k,e)+"\n      ":""}`+`(${h} (if (<= ${g?g:c} ${k?k:e}) `+`${a} ${d}))`+"\n      "+`(${l} (if (plusp ${h}) #'> #'<))`+"\n      "+`(${b} ${g?g:c} (+ ${b} ${h})))`+"\n     "+`((funcall ${l} ${b} ${k?k:e}))`+`${f})`};
Blockly.EusLisp.controls_forEach=function(a){var b=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.EusLisp.valueToCode(a,"LIST",Blockly.EusLisp.ORDER_NONE)||"nil",e=Blockly.EusLisp.statementToCode(a,"DO");e=Blockly.EusLisp.addLoopTrap(e,a);e=Blockly.EusLisp.addContinueLabel_(e,a,"DO");return brack_it("dolist",brack_it(b,c),e)};
Blockly.EusLisp.controls_flow_statements=function(a){var b="";Blockly.EusLisp.STATEMENT_PREFIX&&(b+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_PREFIX,a));Blockly.EusLisp.STATEMENT_SUFFIX&&(b+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_SUFFIX,a));if(Blockly.EusLisp.STATEMENT_PREFIX){var c=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);c&&!c.suppressPrefixSuffix&&(b+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_PREFIX,c))}switch(a.getFieldValue("FLOW")){case "BREAK":return b+
"(return)";case "CONTINUE":return b+"(go :continue)"}throw Error("Unknown flow statement.");};Blockly.EusLisp.math={};Blockly.EusLisp.addReservedWords("math,random,Number");Blockly.EusLisp.math_number=function(a){a=Number(a.getFieldValue("NUM"));Infinity==a?a="*inf*":-Infinity==a&&(a="*-inf*");return[a,Blockly.EusLisp.ORDER_ATOMIC]};
Blockly.EusLisp.math_arithmetic=function(a){var b={ADD:"+",MINUS:"-",MULTIPLY:"*",DIVIDE:"/",POWER:"expt"}[a.getFieldValue("OP")],c=Blockly.EusLisp.valueToCode(a,"A",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.valueToCode(a,"B",Blockly.EusLisp.ORDER_NONE)||"0";return[brack_it(b,c,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.math_single=function(a){var b=a.getFieldValue("OP");a=Blockly.EusLisp.valueToCode(a,"NUM",Blockly.EusLisp.ORDER_NONE)||"0";switch(b){case "NEG":return b=brack_it("-",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ABS":return b=brack_it("abs",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ROOT":return b=brack_it("sqrt",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "LN":return b=brack_it("log",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "LOG10":return b=brack_it("log",a,"10"),
[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "EXP":return b=brack_it("exp",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "POW10":return b=brack_it("expt","10",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ROUND":return b=brack_it("round",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ROUNDUP":return b=brack_it("ceiling",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ROUNDDOWN":return b=brack_it("floor",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "SIN":return b=brack_it("sin",brack_it("deg2rad",
a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "COS":return b=brack_it("cos",brack_it("deg2rad",a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "TAN":return b=brack_it("tan",brack_it("deg2rad",a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ASIN":return b=brack_it("rad2deg",brack_it("asin",a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ACOS":return b=brack_it("rad2deg",brack_it("acos",a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ATAN":return b=brack_it("rad2deg",brack_it("atan",a)),[b,
Blockly.EusLisp.ORDER_FUNCTION_CALL];default:throw Error("Unknown math operator: "+b);}};Blockly.EusLisp.math_constant=function(a){var b={PI:["pi",Blockly.EusLisp.ORDER_ATOMIC],E:["(exp 1)",Blockly.EusLisp.ORDER_FUNCTION_CALL],GOLDEN_RATIO:["(/ (1+ (sqrt 5)) 2)",Blockly.EusLisp.ORDER_FUNCTION_CALL],SQRT2:["(sqrt 2)",Blockly.EusLisp.ORDER_FUNCTION_CALL],SQRT1_2:["(sqrt 1/2)",Blockly.EusLisp.ORDER_FUNCTION_CALL],INFINITY:["*inf*",Blockly.EusLisp.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");return b[a]};
Blockly.EusLisp.math_number_property=function(a){var b=a.getFieldValue("PROPERTY"),c=Blockly.EusLisp.valueToCode(a,"NUMBER_TO_CHECK",Blockly.EusLisp.ORDER_NONE)||"0";switch(b){case "EVEN":return c=brack_it("evenp",c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "ODD":return c=brack_it("oddp",c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "WHOLE":return c=brack_it("zerop",brack_it("mod",c,1)),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "POSITIVE":return c=brack_it("plusp",c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];
case "NEGATIVE":return c=brack_it("minusp",c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "DIVISIBLE_BY":a=Blockly.EusLisp.valueToCode(a,"DIVISOR",Blockly.EusLisp.ORDER_NONE);if(!a||"0"==a)return["nil",Blockly.EusLisp.ORDER_ATOMIC];c=brack_it("zerop",brack_it("mod",c,a));return[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "PRIME":return a=Blockly.EusLisp.provideFunction_("primep",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (n)",";; https://en.wikipedia.org/wiki/Primality_test#Naive_methods",
"  (cond","    ((or (= n 2) (= n 3)) t)","    ((or (not (numberp n))","         (<= n 1)","         (not (zerop (mod n 1)))","         (zerop (mod n 2))","         (zerop (mod n 3)))","     nil)","    (t","     (do ((x 6 (+ x 6)))","         ((> x (1+ (sqrt n))) t)","       (if (or (zerop (mod n (1- x)))","               (zerop (mod n (1+ x))))","           (return nil))))))"]),c=brack_it(a,c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];default:throw Error("Unknown math operator: "+b);}};
Blockly.EusLisp.math_change=function(a){var b=Blockly.EusLisp.valueToCode(a,"DELTA",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return"1"==b?b=brack_it("incf",a):b=brack_it("incf",a,b)};Blockly.EusLisp.math_round=Blockly.EusLisp.math_single;Blockly.EusLisp.math_trig=Blockly.EusLisp.math_single;
Blockly.EusLisp.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.EusLisp.valueToCode(a,"LIST",Blockly.EusLisp.ORDER_NONE)||"nil";switch(b){case "SUM":return b=brack_it("reduce","#'+",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "MIN":return b=brack_it("reduce","#'min",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "MAX":return b=brack_it("reduce","#'max",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "AVERAGE":return b=brack_it("vmean",a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];
case "MEDIAN":return b=Blockly.EusLisp.provideFunction_("median",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-list)","  (let ((local-list (sort (remove-if-not #'numberp my-list) #'<=)))","    (if local-list","        (if (evenp (length local-list))","            (/ (+ (nth (/ (length local-list) 2) local-list)","                  (nth (1- (/ (length local-list) 2)) local-list))","               2.0)","            (nth (/ (1- (length local-list)) 2) local-list)))))"]),b=brack_it(b,a),
[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "MODE":return b=Blockly.EusLisp.provideFunction_("modes",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-list)","   (let* ((counts (mapcar #'(lambda (a) (cons a (count a my-list :test #'equal)))","                          (remove-duplicates my-list :test #'equal)))","          (max-count (reduce #'max (mapcar #'cdr counts))))","     (mapcan #'(lambda (a) (if (= (cdr a) max-count) (list (car a)))) counts)))"]),b=brack_it(b,a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];
case "STD_DEV":return b=brack_it("sqrt",brack_it("variance",a)),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "RANDOM":return b=Blockly.EusLisp.provideRandomChoice(),b=brack_it(b,a),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];default:throw Error("Unknown math operator: "+b);}};Blockly.EusLisp.math_modulo=function(a){var b=Blockly.EusLisp.valueToCode(a,"DIVIDEND",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.valueToCode(a,"DIVISOR",Blockly.EusLisp.ORDER_NONE)||"0";return[brack_it("mod",b,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.math_constrain=function(a){var b=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"0",c=Blockly.EusLisp.valueToCode(a,"LOW",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.valueToCode(a,"HIGH",Blockly.EusLisp.ORDER_NONE)||"*inf*";return[brack_it("min",brack_it("max",b,c),a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.math_random_int=function(a){var b=Blockly.EusLisp.valueToCode(a,"FROM",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.valueToCode(a,"TO",Blockly.EusLisp.ORDER_NONE)||"0";return["0"==b?brack_it("random",a):brack_it("+",b,brack_it("random",brack_it("-",a,b))),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.math_random_float=function(a){return["(random 1.0)",Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.math_atan2=function(a){var b=Blockly.EusLisp.valueToCode(a,"X",Blockly.EusLisp.ORDER_NONE)||"0";a=Blockly.EusLisp.valueToCode(a,"Y",Blockly.EusLisp.ORDER_NONE)||"0";return[brack_it("rad2deg",brack_it("atan2",a,b)),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.procedures={};
Blockly.EusLisp.procedures_defreturn=function(a){var b=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c="";Blockly.EusLisp.STATEMENT_PREFIX&&(c+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_PREFIX,a));Blockly.EusLisp.STATEMENT_SUFFIX&&(c+=Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_SUFFIX,a));c&&(c=Blockly.EusLisp.prefixLines(c,Blockly.EusLisp.INDENT));var e="";Blockly.EusLisp.INFINITE_LOOP_TRAP&&(e=Blockly.EusLisp.prefixLines(Blockly.EusLisp.injectId(Blockly.EusLisp.INFINITE_LOOP_TRAP,a),
Blockly.EusLisp.INDENT));var d=Blockly.EusLisp.statementToCode(a,"STACK"),f=Blockly.EusLisp.valueToCode(a,"RETURN",Blockly.EusLisp.ORDER_NONE)||"",g="";d&&f&&(g=c);for(var h=[],k=a.getVars(),l=0;l<k.length;l++)h[l]=Blockly.EusLisp.variableDB_.getName(k[l],Blockly.VARIABLE_CATEGORY_NAME);c=brack_it("defun",b,brack_it(...h),c,e,d,g,f);c=Blockly.EusLisp.scrub_(a,c);Blockly.EusLisp.definitions_["%"+b]=c;return null};Blockly.EusLisp.procedures_defnoreturn=Blockly.EusLisp.procedures_defreturn;
Blockly.EusLisp.procedures_callreturn=function(a){for(var b=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],e=a.getVars(),d=0;d<e.length;d++)c[d]=Blockly.EusLisp.valueToCode(a,"ARG"+d,Blockly.EusLisp.ORDER_NONE)||"nil";return[brack_it(b,...c),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.procedures_callnoreturn=function(a){return Blockly.EusLisp.procedures_callreturn(a)[0]+"\n"};
Blockly.EusLisp.procedures_ifreturn=function(a){var b=Blockly.EusLisp.valueToCode(a,"CONDITION",Blockly.EusLisp.ORDER_NONE)||"nil";var c=a.hasReturnValue_?Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"nil":"";b=brack_it("if",b,brack_it("return",c));Blockly.EusLisp.STATEMENT_SUFFIX&&(b+=Blockly.EusLisp.prefixLines(Blockly.EusLisp.injectId(Blockly.EusLisp.STATEMENT_SUFFIX,a),Blockly.EusLisp.INDENT));return b};Blockly.EusLisp.texts={};Blockly.EusLisp.provideRandomChoice=function(){return Blockly.EusLisp.provideFunction_("random-choice",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-seq)","  (elt my-seq (random (length my-seq))))"])};
Blockly.EusLisp.provideSearch=function(){return Blockly.EusLisp.provideFunction_("search",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (sub str &key from-end)","  (let ((i (- (length str) (length sub))))","    (flet ((check (j) (string-equal sub str :start2 j :end2 (+ j (length sub)))))","      (if from-end","          (do ((j i (1- j)))","              ((< j 0) nil)","            (if (check j) (return j)))","          (do ((j 0 (1+ j)))","              ((> j i) nil)","            (if (check j) (return j)))))))"])};
Blockly.EusLisp.provideSearchAll=function(){this.provideSearch();return Blockly.EusLisp.provideFunction_("search-all",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (sub str)","  (labels ((search-all-aux (str acc n)","             (let ((start (search sub str)))","               (if start","                   (search-all-aux","                    (subseq str (+ start (length sub)))","                    (cons (+ start n) acc)","                    (+ n start (length sub)))","                   (nreverse acc)))))",
"    (search-all-aux str nil 0)))"])};Blockly.EusLisp.provideJoin=function(){return Blockly.EusLisp.provideFunction_("join",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-list delim)","  (or","   (apply #'concatenate string","          (butlast","           (mapcan","            #'(lambda (a) (list (string a) delim))","            my-list)))",'   ""))'])};
Blockly.EusLisp.provideSplit=function(){this.provideSearchAll();return Blockly.EusLisp.provideFunction_("split",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-string delim)","  (let ((matches (search-all delim my-string))","        (len (length delim))","        (prev 0)","        acc)","    (dolist (match matches)","      (push (subseq my-string prev match) acc)","      (setq prev (+ match len)))","    (push (subseq my-string prev) acc)","    (nreverse acc)))"])};
Blockly.EusLisp.text=function(a){return[Blockly.EusLisp.quote_(a.getFieldValue("TEXT")),Blockly.EusLisp.ORDER_ATOMIC]};Blockly.EusLisp.text_multiline=function(a){a=Blockly.EusLisp.quote_(a.getFieldValue("TEXT"));var b=Blockly.EusLisp.text.forceString_.strRegExp.test(a)?Blockly.EusLisp.ORDER_ATOMIC:Blockly.EusLisp.ORDER_FUNCTION_CALL;return[a,b]};
Blockly.EusLisp.text.forceString_=function(a){return Blockly.EusLisp.text.forceString_.strRegExp.test(a)?[a,Blockly.EusLisp.ORDER_ATOMIC]:[brack_it("string",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.text.forceString_.strRegExp=/^\s*"([^"]|\\")*"\s*$/;
Blockly.EusLisp.text_join=function(a){switch(a.itemCount_){case 0:return['""',Blockly.EusLisp.ORDER_ATOMIC];case 1:return a=Blockly.EusLisp.valueToCode(a,"ADD0",Blockly.EusLisp.ORDER_NONE)||'""',Blockly.EusLisp.text.forceString_(a);case 2:var b=Blockly.EusLisp.valueToCode(a,"ADD0",Blockly.EusLisp.ORDER_NONE)||'""';a=Blockly.EusLisp.valueToCode(a,"ADD1",Blockly.EusLisp.ORDER_NONE)||'""';a=brack_it("concatenate","string",Blockly.EusLisp.text.forceString_(b)[0],Blockly.EusLisp.text.forceString_(a)[0]);
return[a,Blockly.EusLisp.ORDER_FUNCTION_CALL];default:b=[];for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.EusLisp.valueToCode(a,"ADD"+c,Blockly.EusLisp.ORDER_NONE)||'""';a=brack_it("concatenate","string",...b);return[a,Blockly.EusLisp.ORDER_FUNCTION_CALL]}};
Blockly.EusLisp.text_append=function(a){var b=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);a=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';a=brack_it("concatenate","string",b,Blockly.EusLisp.text.forceString_(a)[0]);return a=brack_it("setq",b,a)};Blockly.EusLisp.text_length=function(a){a=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||'""';return[brack_it("length",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.text_isEmpty=function(a){a=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||'""';return[brack_it("null-string-p",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.text_indexOf=function(a){var b=Blockly.EusLisp.valueToCode(a,"FIND",Blockly.EusLisp.ORDER_NONE)||'""',c=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||'""',e=Blockly.EusLisp.provideSearch();return["FIRST"==a.getFieldValue("END")?brack_it(e,b,c):brack_it(e,b,c,":from-end t"),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||'""';switch(b){case "FIRST":return c=brack_it("elt",c,"0"),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "LAST":return c=brack_it("elt",brack_it("reverse",c),"0"),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "FROM_START":return a=Blockly.EusLisp.getAdjustedInt(a,"AT"),c=brack_it("elt",c,a),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "FROM_END":return a=
Blockly.EusLisp.getAdjustedInt(a,"AT"),c=brack_it("elt",a,brack_it("reverse",c)),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "RANDOM":return a=Blockly.EusLisp.provideRandomChoice(),c=brack_it(a,c),[c,Blockly.EusLisp.ORDER_FUNCTION_CALL]}throw Error("Unhandled option (text_charAt).");};
Blockly.EusLisp.text_getSubstring=function(a){var b=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),e=Blockly.EusLisp.valueToCode(a,"STRING",Blockly.EusLisp.ORDER_NONE)||'""';switch(b){case "FROM_START":b=Blockly.EusLisp.getAdjustedInt(a,"AT1");break;case "FROM_END":b=Blockly.EusLisp.getAdjustedInt(a,"AT1",1,!0);b=brack_it("-",brack_it("length",e),b);break;case "FIRST":b="0";break;default:throw Error("Unhandled option (text_getSubstring)");}switch(c){case "FROM_START":a=Blockly.EusLisp.getAdjustedInt(a,
"AT2",1);break;case "FROM_END":a=Blockly.EusLisp.getAdjustedInt(a,"AT2",0);a=0==a?"":brack_it("-",brack_it("length",e),a);break;case "LAST":a="";break;default:throw Error("Unhandled option (text_getSubstring)");}return[brack_it("subseq",e,b,a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.text_changeCase=function(a){var b=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';switch(a.getFieldValue("CASE")){case "UPPERCASE":return b=brack_it("string-upcase",b),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "LOWERCASE":return b=brack_it("string-downcase",b),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL];case "TITLECASE":return a=Blockly.EusLisp.provideFunction_("title-case",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (my-string)","  (let ((tgg t) acc)",
"    (dotimes (i (length my-string))","      (if tgg","          (push (char-upcase (elt my-string i)) acc)","          (push (char-downcase (elt my-string i)) acc))","      (if (position (elt my-string i) (list #\\Space #\\Newline))","          (setq tgg t)","          (setq tgg nil)))","   (coerce (nreverse acc) string)))"]),b=brack_it(a,b),[b,Blockly.EusLisp.ORDER_FUNCTION_CALL]}};
Blockly.EusLisp.text_trim=function(a){var b={LEFT:"string-left-trim",RIGHT:"string-right-trim",BOTH:"string-trim"}[a.getFieldValue("MODE")];a=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';return[brack_it(b,'" "',a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.text_print=function(a){a=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';return brack_it("print",a)};
Blockly.EusLisp.text_prompt_ext=function(a){var b=Blockly.EusLisp.provideFunction_("prompt",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (msg)","  (princ msg)","  (finish-output)","  (read-line))"]),c=a.getField("TEXT")?Blockly.EusLisp.quote_(a.getFieldValue("TEXT")):Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';b=brack_it(b,c);"NUMBER"==a.getFieldValue("TYPE")&&(b=brack_it("read-from-string",b));return[b,Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.text_prompt=Blockly.EusLisp.text_prompt_ext;Blockly.EusLisp.text_count=function(a){var b=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';a=Blockly.EusLisp.valueToCode(a,"SUB",Blockly.EusLisp.ORDER_NONE)||'""';Blockly.EusLisp.provideSearchAll();var c=Blockly.EusLisp.provideFunction_("count-substring",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (sub str)","  (length (search-all sub str)))"]);return[brack_it(c,a,b),Blockly.EusLisp.ORDER_FUNCTION_CALL]};
Blockly.EusLisp.text_replace=function(a){var b=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""',c=Blockly.EusLisp.valueToCode(a,"FROM",Blockly.EusLisp.ORDER_NONE)||'""';a=Blockly.EusLisp.valueToCode(a,"TO",Blockly.EusLisp.ORDER_NONE)||'""';Blockly.EusLisp.provideSplit();Blockly.EusLisp.provideJoin();var e=Blockly.EusLisp.provideFunction_("replace-substring",["(defun "+Blockly.EusLisp.FUNCTION_NAME_PLACEHOLDER_+" (newitem olditem my-string)","  (join (split str olditem) newitem))"]);
return[brack_it(e,a,c,b),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.text_reverse=function(a){a=Blockly.EusLisp.valueToCode(a,"TEXT",Blockly.EusLisp.ORDER_NONE)||'""';return[brack_it("reverse",a),Blockly.EusLisp.ORDER_FUNCTION_CALL]};Blockly.EusLisp.variables={};Blockly.EusLisp.variables_get=function(a){return[Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.EusLisp.ORDER_VARIABLE]};Blockly.EusLisp.variables_set=function(a){var b=Blockly.EusLisp.valueToCode(a,"VALUE",Blockly.EusLisp.ORDER_NONE)||"nil";a=Blockly.EusLisp.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return brack_it("setq",a,b)+"\n"};Blockly.EusLisp.variablesDynamic={};Blockly.EusLisp.variables_get_dynamic=Blockly.EusLisp.variables_get;Blockly.EusLisp.variables_set_dynamic=Blockly.EusLisp.variables_set;
return Blockly.EusLisp;
}));


//# sourceMappingURL=euslisp_compressed.js.map
